name: CI/CD Pipeline - Helixque Landing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  deployments: write

jobs:
  install-and-build:
    name: Install & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Tests (if available)
        run: |
          if [ -f package.json ] && grep -q "\"test\":" package.json; then
            npm test
          else
            echo "No test script found â€” skipping tests."
          fi

      - name: Build Next.js Project
        env:
          NEXT_PUBLIC_GH_TOKEN: ${{ secrets.NEXT_PUBLIC_GH_TOKEN }}
          NEXT_PUBLIC_DISCORD_INVITE_CODE: ${{ secrets.NEXT_PUBLIC_DISCORD_INVITE_CODE }}
          NEXT_PUBLIC_GITHUB_REPO: ${{ secrets.NEXT_PUBLIC_GITHUB_REPO }}
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next/

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: install-and-build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .next/

      - name: Setup Vercel Token
        run: echo "${{ secrets.VERCEL_TOKEN }}" > ~/.vercel_token

      - name: Deploy to Vercel (Production)
        run: |
          npm install -g vercel
          vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
